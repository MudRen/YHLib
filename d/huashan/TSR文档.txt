　　　
　　　　　　独孤九剑之「无招」解迷设计构思

设计构思：

假设：
解迷成功可进入房间：X
解迷结果显示房间为：S
解迷涉及到的六个房间分别为：Ａ、Ｂ、Ｃ、Ｄ、Ｅ、Ｆ

规定：无论地图怎么变化，解迷顺序始终依照Ｆ、Ａ、Ｂ、Ｃ、Ｄ、Ｅ的顺序。


六个房间相互依赖关系：（设计依据）

每个房间里可以打开３－４个锁，但是如果某个锁已经打开，而在另外一个
房间也将其打开的话，则这个本来打开的锁将关闭。比如：
现在所有房间的锁均关闭，Ｓ房间显示为所有锁（六个锁）均锁住。则此时
无法进入Ｘ。
如果Ｆ控制第二、四、六个锁的打开和关闭，现在将其打开，此时Ｓ显示为：
第二、四、六个锁已经打开（这时候只需将第一、三、五个锁打开即可进入
房间Ｘ）。而假设Ｃ控制第一、四、五、六个锁的打开和关闭，现在也将其
打开，这个时候Ｓ房间显示为：第一、二、五个锁已经打开（而不是第一、
二、四、五、六个锁打开），依次类推，只有找到正确的开锁顺序后方能将
六个锁全部打开，而才能进入房间Ｘ。

开锁控制：

A：１、３、４、５
B：２、３、６
C：１、４、５、６
D：１、３、６
E：２、５、６
F：２、４、６

正确开锁顺序为：Ｆ、Ａ、Ｂ、Ｃ、Ｄ、Ｅ
房间编号分别为：Ａ、Ｂ、Ｃ、Ｄ、Ｅ、Ｆ
随机分配的时候房间不变，只是房间编号变，这样每次重启或者一次解迷成功后
只随机分配房间编号即可。

代码实现：
1、建立一个物件"tsr_dugu-jiujian.c"常驻内存用于记录开锁情况以及房间参数分配。
   该物件建立初即随机分配房间参数并记录，然后常驻内存等待各个房间查询。

2、分别设置房间A、B、C、D、E、F和S。A-F房间统一继承一个文件"tsr_room_dugu-jiujian.c"，
该文件包含了房间A-F解迷（开、关锁）指令（房间锁的开关状态记录在物件"tsr_dugu-jiujian.c"
中，一旦触发了开或关指令则这个开关状态将记录在"tsr_dugu-jiujian.c"中，而在房间S中的显示
内容也将依据记录显示，最后当六个锁全部打开后房间S将增加入口"enter"进入目的地X，而物件也
将在一定时间后清楚A-F所有锁的开关状态并且关闭入口。以此不断循环。



